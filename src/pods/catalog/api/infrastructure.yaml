AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: AWS resources for the Catalog microservice

Parameters:
  StageName:
    Type: String
    Description: "API's stage name"
    Default: "dev"

  TableName:
    Type: String
    Description: "Table's name"
    Default: catalog

  UserPoolARN:
    Type: String
    Description: The ARN of the user pool that provides authentication
    Default: "dev"

Resources:
  ProductsTabel:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${TableName}_${StageName}
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: N
        - AttributeName: brand
          AttributeType: S
        - AttributeName: model
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: createdAt
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      GlobalSecondaryIndexes:
        - IndexName: !Sub ${TableName}_${StageName}_gsi
          KeySchema:
            - AttributeName: brand
              KeyType: HASH
            - AttributeName: model
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5

  CatalogApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !Ref UserPoolARN
            IdentitySource: "method.request.header.Authorization"

  CatalogApiController:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/apiController.handler
      MemorySize: 1024
      Timeout: 60
      Runtime: nodejs8.10
      Environment:
        Variables:
          REGION: !Sub ${AWS::Region}
      Events:
        ProxyGet:
          Type: Api
          Properties:
            RestApiId: !Ref CatalogApi
            Path: /{proxy+}
            Method: GET
        ProxyOptions:
          Type: Api
          Properties:
            RestApiId: !Ref CatalogApi
            Path: /{proxy+}
            Method: OPTIONS
            Auth:
              Authorizer: NONE

Outputs:
  ApiUrl:
    Description: Gateway API URL
    Value: !Sub https://${CatalogApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/
