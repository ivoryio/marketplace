AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS resources for the Catalog microservice
Parameters:
  StageName:
    Type: String
    Description: API's stage name
    Default: dev
  TableName:
    Type: String
    Description: Table's name
    Default: catalog
  UserPoolARN:
    Type: String
    Description: The ARN of the user pool that provides authentication
    Default: dev
Resources:
  ProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${TableName}_${StageName}
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: createdAt
        AttributeType: N
      - AttributeName: brand
        AttributeType: S
      - AttributeName: model
        AttributeType: S
      - AttributeName: isSpotlight
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      - AttributeName: createdAt
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      GlobalSecondaryIndexes:
      - IndexName:
          Fn::Sub: ${TableName}_${StageName}_gsi_category
        KeySchema:
        - AttributeName: brand
          KeyType: HASH
        - AttributeName: model
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
      - IndexName:
          Fn::Sub: ${TableName}_${StageName}_gsi_filter
        KeySchema:
        - AttributeName: isSpotlight
          KeyType: HASH
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
  CatalogApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: StageName
      Cors: '''*'''
  CatalogApiController:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/apiController.handler
      MemorySize: 1024
      Timeout: 60
      Runtime: nodejs8.10
      Environment:
        Variables:
          REGION:
            Fn::Sub: ${AWS::Region}
          TABLE_NAME:
            Ref: ProductsTable
          CATEGORY_INDEX_NAME:
            Fn::Sub: ${TableName}_${StageName}_gsi_category
          FILTER_INDEX_NAME:
            Fn::Sub: ${TableName}_${StageName}_gsi_filter
      Policies:
      - AmazonDynamoDBFullAccess
      - Statement:
        - Effect: Allow
          Action: cloudsearch:search
          Resource: '*'
      Events:
        ProxyGet:
          Type: Api
          Properties:
            RestApiId:
              Ref: CatalogApi
            Path: /{proxy+}
            Method: GET
        ProxyOptions:
          Type: Api
          Properties:
            RestApiId:
              Ref: CatalogApi
            Path: /{proxy+}
            Method: OPTIONS
      CodeUri: s3://ivory-marketplace-build-artifacts/3045e5aba3fa8f0b3c5d3ee8c00bbaae
Outputs:
  ApiUrl:
    Description: Gateway API URL
    Value:
      Fn::Sub: https://${CatalogApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/
